//&부모를 참조할 수 있다.
//$ : 기호 + "작명" : "저장할 내용"; 변수선언
$primary-color: #00498c;
/*
    daken : 어둡게  background-color: darken($primary-color,50%);
    , Lighten : 밝게 background-color: lighten($primary-color,50%); (hover와 잘쓰인다.)
    saturate : 더 선명하게(높은 채도) background-color: saturate($primary-color,10%);
    desaturate : 더 흐리게 (낮은 채도) background-color: desaturate($primary-color,80%);
    odjust-hue : 명도 변경 background-color: odjust-hue($primary-color,30%);
    rgba : alpha값 변경 background-color: rgba($primary-color, 0.5);
*/
/*
    extend : css 스타일 확장
    % 임시 클래스 이름 html에서 btn이라는 클래스는 사용하지 않지만 공통적으로 쓰일떄 많이 쓴다.
    css 파일에는 임시 클래스는 명시되지않는다.
    %btn{
    padding: 10px 20px;
    cursor: pointer;
    background-color: inherit;
    border: 1px solid lightgray;
    border-radius: 14px;
}

.btn-1{
    @extend %btn;
    border: 1px solid red;
    color: red;
    font-weight: bold;
}

.btn-2{
    @extend %btn;
    border: 1px solid blue;
    color: blue;
    font-weight: blue;
}
*/
/*mixin extend와 유사해보이지만 mixin같은경우 인자값을 통해 받아올수있다. 인자값을 다 받아오지않으면 오류가 나온다.
  $태두리 : black 인자 값을 전달하지 않게되면 deflut로 값을 넣을수 있다. 인자값 순서는 같아야한다.
  순서를 무시하고 특정한 인자에 값을 부여하고 싶을때는 지어준 이름을 그대로사용해주면된다 ($태두리, red)
  @mixin 버튼($테두리, $글자색){
    padding: 10px 20px;
    cursor: pointer;
    background-color: inherit;
    border: 1px solid lightgray;
    border-radius: 14px;
    border: 1px solid $테두리;
    color: $글자색;
}

.btn-1{
    @include 버튼(red,red);
}

.btn-2{
    @include 버튼(blue,blue);

}*/

/*
    https://developer.mozilla.org/ko/docs/Web/CSS/font
    overatprt : 연산자 sass에서는 calc를 사용안고도 4칙연산이 가능하다.
    / 이미 사용되고 있기때문에 나누기는 사용할수 없다 
    사용 하고싶다면 
    1. 100px + 100px / 2 ; 이 수식이 연산이 필요하다고 인식하여 된다.
    2. (100px / 2)
    3. @use "sass:math"; 선언후 
    math.div(200px,2) 사용하면된다.
    궁금하면 sass math 검색
*/
/*
    @use 다른 파일을 끌어다가 쓸 때 사용한다.
    @use "경로"; 다른 sass파일을 들고올수 있다. _sass파일을 만들면 css파일이 생성되지 않는다. improt해올떄 _는 안붙여도된다.
    다른 파일에 변수를 선언해놓은걸 사용하고 싶을때는 test.$변수
    @use "sass:math" as c; 하면 c로 바꿀수 있다.
    @import url() 공식문서에 import대신 use를 사용하라고 나와있다.
*/
/*
    sass 반복문, 조건문, 변수 : 배열,오브젝트 형식으로도 선언가능하다.

    sass는 과연 좋은걸까 정보 찾기.
*/
@for $i from 1 through 10 {
    .box:nth-of-type(#($i)){
        width: 100px;
    }
}

$list : orange,blue,red,yellow;
$object : (
    1: orange,
    2: blue,
    3: yellow
);

@each $color in $list {
    .box{
        background-color: $color;
    }
}

@each  $key, $color in $object {
    .box-#($key){
        background-color: $color;
    }
}

$sataement: blue;

p{
    @if $sataement == blue{
        color: blue;
    }
    @else{
        color: yellow;
    }
}